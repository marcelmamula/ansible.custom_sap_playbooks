# Dedicated task to tag provisioned resources

- name: Block to tag AWS resources
  when:
    - sap_vm_provision_iac_platform == "aws_ec2_vs"
    - (resource_tag_platform_dict is defined and resource_tag_platform_dict | length > 0)
      or (resource_tag_scenario_dict is defined and resource_tag_scenario_dict | length > 0)
  environment:
    AWS_REGION: "{{ sap_vm_provision_aws_region }}"
  delegate_to: localhost
  block:
    # Search for instances is using tags generated by sap_infrastructure
    - name: Read provisioned AWS EC2 instance information
      register: provisioned_instance_info
      amazon.aws.ec2_instance_info:
        filters:
          "tag:Name": "{{ inventory_hostname }}"
          "instance-state-name": ["running"]
        access_key: "{{ sap_vm_provision_aws_access_key }}"
        secret_key: "{{ sap_vm_provision_aws_secret_access_key }}"

    - name: Combine resource_tag_dict
      ansible.builtin.set_fact:
        resource_tag_dict:
          "{{ resource_tag_platform_dict | d({}) | combine(resource_tag_scenario_dict | d({})) }}"

    - name: Tag provisioned AWS EC2 instances
      amazon.aws.ec2_tag:
        resource: "{{ provisioned_instance_info.instances[0].instance_id }}"
        state: present
        tags: "{{ resource_tag_dict }}"
        access_key: "{{ sap_vm_provision_aws_access_key }}"
        secret_key: "{{ sap_vm_provision_aws_secret_access_key }}"
      when:
        - resource_tag_dict | length > 0

# TODO:
# 1. Add Azure, GCP, etc.
