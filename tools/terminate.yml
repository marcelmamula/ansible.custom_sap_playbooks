---
# Ansible playbook for terminating cloud resources
# NOTE: Termination of Azure instances takes significantly longer than others.

- name: Ansible Play to create dynamic inventory group for provisioning
  hosts: localhost
  gather_facts: false
  tasks:

    - name: Create dynamic inventory group
      ansible.builtin.include_tasks:
        file: ../tasks/prepare_inventory.yml


- name: Ansible Play to unregister BYOS servers
  hosts: hana_primary, hana_secondary, nwas_ascs, nwas_ers, nwas_pas, nwas_aas
  become: true
  any_errors_fatal: true
  max_fail_percentage: 0
  tasks:
    - name: Unregister OS for BYOS image
      ansible.builtin.include_tasks:
        file: ../tasks/os_register.yml
      vars:
        os_registered: false


- name: Ansible Play to Terminate cloud resources - AWS
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Terminate Block for AWS
      when: sap_vm_provision_iac_platform == 'aws_ec2_vs'
      environment:
        AWS_ACCESS_KEY_ID: "{{ sap_vm_provision_aws_access_key }}"
        AWS_SECRET_ACCESS_KEY: "{{ sap_vm_provision_aws_secret_access_key }}"
        AWS_REGION: "{{ sap_vm_provision_aws_region }}"
      block:
        - name: Terminate - AWS EC2 instances
          amazon.aws.ec2_instance:
            state: absent
            name: "{{ item }}"
            vpc_subnet_id: "{{ sap_vm_provision_aws_vpc_subnet_id }}"
            wait: false
          loop: "{{ groups['all'] | difference([inventory_hostname]) }}"
          no_log: "{{ __sap_vm_provision_no_log | d(true) }}"

        # DNS Cleanup commented out after overwrite was implemented in sap_infrastructure
        # - name: Terminate - AWS DNS A Records
        #   amazon.aws.route53:
        #     state: absent
        #     private_zone: true
        #     zone: "{{ hostvars[item].sap_vm_provision_dns_root_domain }}"
        #     record: "{{ item }}.{{ hostvars[inventory_hostname].sap_vm_provision_dns_root_domain }}"
        #     type: A
        #     wait: true
        #   loop: "{{ groups['all'] | difference([inventory_hostname]) }}"

        # - name: Terminate - AWS DNS A Records - HA
        #   amazon.aws.route53:
        #     state: absent
        #     private_zone: true
        #     zone: "{{ hostvars[item].sap_vm_provision_dns_root_domain }}"
        #     record: "{{ item }}-ha.{{ hostvars[inventory_hostname].sap_vm_provision_dns_root_domain }}"
        #     type: A
        #     wait: true
        #   loop: "{{ groups['all'] | difference([inventory_hostname]) }}"


- name: Ansible Play to Terminate cloud resources - Azure
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Terminate Block for Azure
      when: sap_vm_provision_iac_platform == 'msazure_vm'
      block:
        - name: Terminate - Azure VM
          azure.azcollection.azure_rm_virtualmachine:
            resource_group: "{{ sap_vm_provision_msazure_resource_group_name }}"
            location: "{{ sap_vm_provision_msazure_location_region }}"
            name: "{{ item }}"
            remove_on_absent: ["all"]
            state: "absent"
            # Azure credentials
            subscription_id: "{{ sap_vm_provision_msazure_subscription_id }}"
            tenant: "{{ sap_vm_provision_msazure_tenant_id }}"
            client_id: "{{ sap_vm_provision_msazure_app_client_id }}"
            secret: "{{ sap_vm_provision_msazure_app_client_secret }}"
          loop: "{{ groups['all'] | difference([inventory_hostname]) }}"
          no_log: "{{ __sap_vm_provision_no_log | d(true) }}"

        - name: Terminate - Azure Load Balancers
          azure.azcollection.azure_rm_loadbalancer:
            resource_group: "{{ sap_vm_provision_msazure_resource_group_name }}"
            name: "{{ lookup('vars', item) }}"
            state: absent
            # Azure credentials
            subscription_id: "{{ sap_vm_provision_msazure_subscription_id }}"
            tenant: "{{ sap_vm_provision_msazure_tenant_id }}"
            client_id: "{{ sap_vm_provision_msazure_app_client_id }}"
            secret: "{{ sap_vm_provision_msazure_app_client_secret }}"
          loop:
            - sap_vm_provision_ha_load_balancer_name_nwas
            - sap_vm_provision_ha_load_balancer_name_hana
          when:
            - lookup('vars', item, default='') | length > 0
          no_log: "{{ __sap_vm_provision_no_log | d(true) }}"

        # - name: Prepare - Azure Disk facts
        #   ansible.builtin.set_fact:
        #     filesystem_volume_map: |
        #       {% set volume_map = [] -%}
        #       {% set av_vol = available_volumes -%}
        #       {% for storage_item in lookup('ansible.builtin.vars', 'sap_vm_provision_' + sap_vm_provision_iac_platform + '_host_specifications_dictionary')[
        #         sap_vm_provision_host_specification_plan][scaleout_origin_host_spec | default(inventory_hostname)].storage_definition -%}
        #         {% for idx in range(0, storage_item.disk_count | default(1)) -%}
        #           {% if (storage_item.filesystem_type is defined) -%}
        #             {% if ('swap' in storage_item.filesystem_type and storage_item.swap_path is not defined)
        #             or ('swap' not in storage_item.filesystem_type and storage_item.nfs_path is not defined) -%}
        #               {% set vol = volume_map.extend([
        #               {
        #                 'definition_key': storage_item.name,
        #                 'device': av_vol[0],
        #                 'fstype': storage_item.filesystem_type | default('xfs'),
        #                 'name': storage_item.name + idx|string,
        #                 'size': storage_item.disk_size | default(0),
        #                 'type': storage_item.disk_type | default('')
        #               }
        #               ]) %}
        #             {%- set _ = av_vol.pop(0) -%}
        #             {%- endif %}
        #           {%- endif %}
        #         {%- endfor %}
        #       {%- endfor %}
        #       {{ volume_map }}

        # - name: Terminate - Azure Disks
        #   no_log: "{{ __sap_vm_provision_no_log | d(true) }}"
        #   azure.azcollection.azure_rm_manageddisk:
        #     resource_group: "{{ sap_vm_provision_msazure_resource_group_name }}"
        #     location: "{{ sap_vm_provision_msazure_location_region }}"
        #     name: "{{ inventory_hostname }}-vol_{{ vol_item.name }}"
        #     state: absent
        #     # Azure credentials
        #     subscription_id: "{{ sap_vm_provision_msazure_subscription_id }}"
        #     tenant: "{{ sap_vm_provision_msazure_tenant_id }}"
        #     client_id: "{{ sap_vm_provision_msazure_app_client_id }}"
        #     secret: "{{ sap_vm_provision_msazure_app_client_secret }}"
        #   loop: "{{ filesystem_volume_map }}"
        #   loop_control:
        #     loop_var: vol_item
        #     index_var: vol_item_index
        #     label: "{{ vol_item.definition_key }}: {{ vol_item.name }} (size: {{ vol_item.size }})"
        #   when:
        #     - vol_item.fstype is defined
        #     - vol_item.size > 0

- name: Ansible Play to Terminate cloud resources - Google Cloud
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Terminate Block for GCP
      when: sap_vm_provision_iac_platform == 'gcp_ce_vm'
      block:
        - name: Terminate - GCP VM
          google.cloud.gcp_compute_instance:
            state: absent
            project: "{{ sap_vm_provision_gcp_project }}"
            zone: "{{ sap_vm_provision_gcp_region_zone }}"
            name: "{{ item }}"
            auth_kind: "serviceaccount"
            service_account_file: "{{ sap_vm_provision_gcp_credentials_json }}"
          loop: "{{ groups['all'] | difference([inventory_hostname]) }}"
          no_log: "{{ __sap_vm_provision_no_log | d(true) }}"
