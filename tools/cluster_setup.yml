---
# Ansible playbook for setting up of Pacemaker cluster using sap_ha_pacemaker_cluster role

- name: Ansible Play to create dynamic inventory group
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Create dynamic inventory group
      ansible.builtin.include_tasks:
        file: ../tasks/prepare_inventory.yml


- name: Register BYOS OS image before cluster creation
  hosts: hana_primary, hana_secondary, nwas_ascs, nwas_ers, nwas_scs
  become: true
  any_errors_fatal: true
  max_fail_percentage: 0
  gather_facts: true
  tasks:

    - name: Register OS for BYOS image
      ansible.builtin.include_tasks:
        file: ../tasks/os_register.yml
      vars:
        os_registered: true


- name: Setup HA cluster - SAP Netweaver ASCS/ERS
  hosts: nwas_ascs_ers
  become: true
  any_errors_fatal: true
  max_fail_percentage: 0
  gather_facts: true
  tasks:

    - name: Execute Ansible Role sap_ha_pacemaker_cluster  # noqa jinja[spacing]
      ansible.builtin.include_role:
        name: community.sap_install.sap_ha_pacemaker_cluster
      vars:
        sap_ha_pacemaker_cluster_cluster_name: clusterhdb
        sap_ha_pacemaker_cluster_hacluster_user_password: 'clusterpass'

        sap_ha_pacemaker_cluster_host_type:
          - nwas_abap_ascs_ers

        sap_ha_pacemaker_cluster_storage_definition:
          "{{ lookup('vars', 'sap_vm_provision_' + sap_vm_provision_iac_platform + '_host_specifications_dictionary')
          [sap_vm_provision_host_specification_plan][ansible_hostname].storage_definition | list }}"

        sap_ha_pacemaker_cluster_storage_nfs_filesytem_type: nfs4
        sap_ha_pacemaker_cluster_storage_nfs_mount_options: defaults,hard,acl
        sap_ha_pacemaker_cluster_storage_nfs_server: "{{ sap_storage_nfs_server | default('') }}"

        sap_ha_pacemaker_cluster_nwas_sid: "{{ sap_system_sid | default('') }}"

        sap_ha_pacemaker_cluster_nwas_ascs_instance_nr: "{{ sap_system_nwas_ascs_instance_nr }}"
        sap_ha_pacemaker_cluster_nwas_ers_instance_nr: "{{ sap_system_nwas_ers_instance_nr }}"

        sap_ha_pacemaker_cluster_nwas_ascs_sapinstance_instance_name: "{{ sap_profile_name_ascs }}"
        sap_ha_pacemaker_cluster_nwas_ascs_sapinstance_start_profile_string: "{{ sap_profile_path_ascs }}"

        sap_ha_pacemaker_cluster_nwas_ers_sapinstance_instance_name: "{{ sap_profile_name_ers }}"
        sap_ha_pacemaker_cluster_nwas_ers_sapinstance_start_profile_string: "{{ sap_profile_path_ers }}"

        # Ensure that python interpreter points to python3
        ansible_python_interpreter: "{{ '/usr/bin/python3' if ansible_os_family == 'Suse' else omit }}"

        # sap_ha_pacemaker_cluster_create_config_varfile: true
        # sap_ha_pacemaker_cluster_create_config_dest: "/tmp/ha_cluster_config"

    - name: Get cluster status
      ansible.builtin.command:
        cmd: "{{ 'pcs' if ansible_os_family == 'RedHat' else 'crm' }} status"
      register: cluster_status_output
      changed_when: false

    - name: Show cluster status
      ansible.builtin.debug:
        msg: "{{ cluster_status_output.stdout_lines }}"


- name: Setup HA cluster - SAP Netweaver SCS/ERS
  hosts: nwas_scs_ers
  become: true
  any_errors_fatal: true
  max_fail_percentage: 0
  gather_facts: true
  tasks:

    - name: Execute Ansible Role sap_ha_pacemaker_cluster  # noqa jinja[spacing]
      ansible.builtin.include_role:
        name: community.sap_install.sap_ha_pacemaker_cluster
      vars:
        sap_ha_pacemaker_cluster_cluster_name: clusterhdb
        sap_ha_pacemaker_cluster_hacluster_user_password: 'clusterpass'

        sap_ha_pacemaker_cluster_host_type:
          - nwas_java_scs_ers

        sap_ha_pacemaker_cluster_storage_definition:
          "{{ lookup('vars', 'sap_vm_provision_' + sap_vm_provision_iac_platform + '_host_specifications_dictionary')
          [sap_vm_provision_host_specification_plan][ansible_hostname].storage_definition | list }}"

        sap_ha_pacemaker_cluster_storage_nfs_filesytem_type: nfs4
        sap_ha_pacemaker_cluster_storage_nfs_mount_options: defaults,hard,acl
        sap_ha_pacemaker_cluster_storage_nfs_server: "{{ sap_storage_nfs_server | default('') }}"

        sap_ha_pacemaker_cluster_nwas_sid: "{{ sap_system_sid | default('') }}"

        sap_ha_pacemaker_cluster_nwas_scs_instance_nr: "{{ sap_system_nwas_scs_instance_nr }}"
        sap_ha_pacemaker_cluster_nwas_ers_instance_nr: "{{ sap_system_nwas_ers_instance_nr }}"

        sap_ha_pacemaker_cluster_nwas_scs_sapinstance_instance_name: "{{ sap_profile_name_scs }}"
        sap_ha_pacemaker_cluster_nwas_scs_sapinstance_start_profile_string: "{{ sap_profile_path_scs }}"

        sap_ha_pacemaker_cluster_nwas_ers_sapinstance_instance_name: "{{ sap_profile_name_ers }}"
        sap_ha_pacemaker_cluster_nwas_ers_sapinstance_start_profile_string: "{{ sap_profile_path_ers }}"

        # Ensure that python interpreter points to python3
        ansible_python_interpreter: "{{ '/usr/bin/python3' if ansible_os_family == 'Suse' else omit }}"


    - name: Get cluster status
      ansible.builtin.command:
        cmd: "{{ 'pcs' if ansible_os_family == 'RedHat' else 'crm' }} status"
      register: cluster_status_output
      changed_when: false

    - name: Show cluster status
      ansible.builtin.debug:
        msg: "{{ cluster_status_output.stdout_lines }}"


- name: Setup HA cluster - HANA Scale-up
  hosts: hana_primary, hana_secondary
  become: true
  any_errors_fatal: true
  max_fail_percentage: 0
  gather_facts: true
  tasks:

    - name: Set Ansible Variable for SAP HANA scale-up HA cluster configuration
      ansible.builtin.set_fact:
        sap_hana_cluster_nodes:
          - node_name: "{{ hostvars[groups['hana_primary'][0]].ansible_hostname }}"
            node_ip: "{{ hostvars[groups['hana_primary'][0]]['ansible_default_ipv4']['address'] }}"
            node_role: primary
            hana_site: DC01
          - node_name: "{{ hostvars[groups['hana_secondary'][0]].ansible_hostname }}"
            node_ip: "{{ hostvars[groups['hana_secondary'][0]]['ansible_default_ipv4']['address'] }}"
            node_role: secondary
            hana_site: DC02
      when:
        - hostvars[groups['hana_primary'][0]].ansible_hostname is defined
        - hostvars[groups['hana_primary'][0]]['ansible_default_ipv4']['address'] is defined
        - hostvars[groups['hana_secondary'][0]].ansible_hostname is defined
        - hostvars[groups['hana_secondary'][0]]['ansible_default_ipv4']['address'] is defined

    - name: Execute Ansible Role sap_ha_pacemaker_cluster
      ansible.builtin.include_role:
        name: community.sap_install.sap_ha_pacemaker_cluster
      vars:
        sap_ha_pacemaker_cluster_cluster_name: clusterhdb
        sap_ha_pacemaker_cluster_hacluster_user_password: 'clusterpass'

        sap_ha_pacemaker_cluster_sap_type: saphana_scaleup
        sap_ha_pacemaker_cluster_host_type:
          - hana_scaleup_perf

        sap_ha_pacemaker_cluster_hana_sid: "{{ sap_system_hana_db_sid }}"
        sap_ha_pacemaker_cluster_hana_instance_nr: "{{ sap_system_hana_db_instance_nr }}"

        sap_ha_pacemaker_cluster_cluster_nodes: "{{ sap_hana_cluster_nodes }}"
        sap_ha_pacemaker_cluster_replication_type: none

        # Ensure that python interpreter points to python3
        ansible_python_interpreter: "{{ '/usr/bin/python3' if ansible_os_family == 'Suse' else omit }}"


    - name: Get cluster status
      ansible.builtin.command:
        cmd: "{{ 'pcs' if ansible_os_family == 'RedHat' else 'crm' }} status"
      register: cluster_status_output
      changed_when: false

    - name: Show cluster status
      ansible.builtin.debug:
        msg: "{{ cluster_status_output.stdout_lines }}"


- name: De-Register BYOS OS image after cluster creation
  hosts: hana_primary, hana_secondary, nwas_ascs, nwas_ers, nwas_scs
  become: true
  any_errors_fatal: true
  max_fail_percentage: 0
  gather_facts: true
  tasks:

    - name: De-Register OS for BYOS image
      ansible.builtin.include_tasks:
        file: ../tasks/os_register.yml
      vars:
        os_registered: false
