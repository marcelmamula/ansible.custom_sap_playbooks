---
- name: Ansible Play to create dynamic inventory group for provisioning
  hosts: localhost
  gather_facts: false
  vars:
    host_dict: "{{ 'sap_vm_provision_' ~ sap_vm_provision_iac_platform ~ '_host_specifications_dictionary' }}"
  tasks:
    - name: Create dynamic inventory group sap_vm_provision_target_inventory_group
      ansible.builtin.add_host:
        name: "{{ item }}"
        group: sap_vm_provision_target_inventory_group
      loop: "{{ lookup('ansible.builtin.vars', host_dict)[sap_vm_provision_host_specification_plan].keys() }}"
      when: sap_vm_provision_iac_type == "ansible" or sap_vm_provision_iac_type == "ansible_to_terraform"


- name: Ansible Play to provision hosts for SAP
  hosts: sap_vm_provision_target_inventory_group
  gather_facts: false
  tasks:

    - name: Execute Ansible Role sap_vm_provision
      ansible.builtin.include_role:
        name: community.sap_infrastructure.sap_vm_provision
      when: sap_vm_provision_iac_type == "ansible" or sap_vm_provision_iac_type == "ansible_to_terraform"

    - name: Tag provisioned resources
      ansible.builtin.include_tasks:
        file: ../../tasks/tag_resources.yml


# Google DNS is not refreshing cache quick enough during frequent rebuilds.
- name: Ansible Play to flush DNS on Google Cloud
  hosts: localhost
  gather_facts: true
  tasks:

    - name: Flush Bastion host DNS service ncsd
      delegate_to: "{{ sap_vm_provision_bastion_public_ip }}"
      ansible.builtin.command:
        cmd: sudo systemctl restart nscd
      vars:
        ansible_user: "{{ sap_vm_provision_bastion_user }}"
        ansible_ssh_private_key_file: "{{ sap_vm_provision_ssh_bastion_private_key_file_path }}"
        ansible_ssh_common_args: " -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
      when:
        - sap_vm_provision_iac_platform == "gcp_ce_vm"
        - ansible_os_family == 'Suse'
      changed_when: true


- name: Ansible Play for hosts storage setup
  hosts: hana_primary
  become: true
  any_errors_fatal: true
  max_fail_percentage: 0
  tasks:

    - name: Execute Ansible Role sap_storage_setup
      ansible.builtin.include_role:
        name: community.sap_install.sap_storage_setup
      vars:  # noqa jinja[spacing]
        sap_storage_setup_sid: "{{ host_specifications_dictionary[sap_vm_provision_host_specification_plan]
         [inventory_hostname_short].sap_storage_setup_sid | default('') }}"
        sap_storage_setup_nwas_abap_ascs_instance_nr: "{{ sap_system_nwas_abap_ascs_instance_nr }}"
        sap_storage_setup_nwas_abap_pas_instance_nr: "{{ sap_system_nwas_abap_pas_instance_nr }}"
        sap_storage_setup_host_type: "{{ host_specifications_dictionary[sap_vm_provision_host_specification_plan]
         [inventory_hostname_short].sap_storage_setup_host_type | list }}"
      when:
        - sap_vm_provision_iac_type == "ansible" or sap_vm_provision_iac_type == "ansible_to_terraform"
        - not sap_vm_provision_iac_type == "existing_hosts"


- name: Ansible Play for preparing NFS mounts with SAP Software
  hosts: hana_primary
  become: true
  any_errors_fatal: true
  max_fail_percentage: 0
  tasks:

    - name: Create software directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ sap_software_nfs_db.mount }}"
        - "{{ sap_software_nfs_app.mount }}"

    - name: Mount network share - HANA
      ansible.posix.mount:
        path: "{{ sap_software_nfs_db.mount }}"
        src: '{{ sap_software_nfs_db.source }}'
        fstype: "{{ sap_software_nfs_db.type }}"
        state: mounted

    - name: Mount network share - Application
      ansible.posix.mount:
        path: "{{ sap_software_nfs_app.mount }}"
        src: '{{ sap_software_nfs_app.source }}'
        fstype: "{{ sap_software_nfs_app.type }}"
        state: mounted


- name: Ansible Play for preparing all SAP software hosts
  hosts: hana_primary
  become: true
  any_errors_fatal: true
  max_fail_percentage: 0
  tasks:

    - name: Set fact sidadm for futher use
      ansible.builtin.set_fact:
        sidadm: "{{ sap_system_sid | lower + 'adm' }}"
        sidadm_hana: "{{ sap_system_hana_db_sid | lower + 'adm' }}"

    - name: Get list of users in /etc/passwd
      ansible.builtin.getent:
        database: passwd

    - name: Check if SAP HANA profile is present
      ansible.builtin.stat:
        path: "/usr/sap/{{ sap_system_hana_db_sid | upper }}/SYS/profile/DEFAULT.PFL"
      register: sap_hana_profile_stat_check

    - name: Block with preconfigure roles
      when: not sidadm_hana in getent_passwd.keys() or not sap_hana_profile_stat_check.stat.exists
      block:
        - name: Execute Ansible Role sap_general_preconfigure
          ansible.builtin.include_role:
            name: community.sap_install.sap_general_preconfigure

        - name: Execute Ansible Role sap_hana_preconfigure
          ansible.builtin.include_role:
            name: community.sap_install.sap_hana_preconfigure

        - name: Execute Ansible Role sap_netweaver_preconfigure
          ansible.builtin.include_role:
            name: community.sap_install.sap_netweaver_preconfigure


- name: Ansible Play for SAP HANA Database Server installation
  hosts: hana_primary
  become: true
  any_errors_fatal: true
  max_fail_percentage: 0
  tasks:

    - name: Set fact for Software source
      ansible.builtin.set_fact:
        sap_install_media_detect_source_directory: "{{ sap_software_nfs_db.mount }}"
        sap_install_media_detect_target_directory: "{{ sap_software_directory }}"

    - name: Execute Ansible Role sap_install_media_detect
      ansible.builtin.include_role:
        name: community.sap_install.sap_install_media_detect
      vars:
        sap_install_media_detect_swpm: false
        sap_install_media_detect_hostagent: true
        sap_install_media_detect_igs: false
        sap_install_media_detect_kernel: false
        sap_install_media_detect_webdisp: false
        sap_install_media_detect_db: "saphana"
        sap_install_media_detect_db_client: 'saphana'
      when:
        - not sidadm_hana in getent_passwd.keys() or not sap_hana_profile_stat_check.stat.exists

    - name: Copy HANA client into hdblcm folder
      ansible.builtin.copy:  # noqa risky-file-permissions
        src: "{{ sap_install_media_detect_target_directory }}/sap_hana_client_extracted/SAP_HANA_CLIENT"
        dest: "{{ sap_install_media_detect_target_directory }}/sap_hana_extracted/"
        remote_src: true
      when:
        - not sidadm_hana in getent_passwd.keys() or not sap_hana_profile_stat_check.stat.exists


    - name: Execute Ansible Role sap_hana_install
      ansible.builtin.include_role:
        name: community.sap_install.sap_hana_install
      when:
        - not sidadm_hana in getent_passwd.keys() or not sap_hana_profile_stat_check.stat.exists


- name: Ansible Play for S4H Installation
  hosts: hana_primary
  become: true
  any_errors_fatal: true
  max_fail_percentage: 0
  tasks:

    - name: Set fact for Software source
      ansible.builtin.set_fact:
        sap_install_media_detect_source_directory: "{{ sap_software_nfs_app.mount }}"
        sap_install_media_detect_target_directory: ""

    - name: Check if SAP profile is present
      ansible.builtin.stat:
        path: "/sapmnt/{{ sap_system_sid | upper }}/profile/DEFAULT.PFL"
      register: sap_profile_stat_check

    - name: Execute Ansible Role sap_install_media_detect
      ansible.builtin.include_role:
        name: community.sap_install.sap_install_media_detect
      vars:
        sap_install_media_detect_swpm: true
        sap_install_media_detect_hostagent: true
        sap_install_media_detect_igs: true
        sap_install_media_detect_kernel: true
        sap_install_media_detect_webdisp: false
        sap_install_media_detect_db_client: "saphana"
        sap_install_media_detect_export: "saps4hana"
      when: not sidadm in getent_passwd.keys() or not sap_profile_stat_check.stat.exists


    - name: Execute Ansible Role sap_swpm
      ansible.builtin.include_role:
        name: community.sap_install.sap_swpm
      when: not sidadm in getent_passwd.keys() or not sap_profile_stat_check.stat.exists


- name: Ansible Play for Post-install alterations for Infrastructure Platform
  hosts: localhost
  gather_facts: false
  tasks:

    - name: Execute Ansible Role sap_vm_provision
      ansible.builtin.include_role:
        name: community.sap_infrastructure.sap_vm_provision
      vars:
        sap_vm_provision_iac_post_deployment: true
      when: sap_vm_provision_iac_type == "ansible"
